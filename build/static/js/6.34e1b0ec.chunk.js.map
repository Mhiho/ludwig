{"version":3,"sources":["styles/addBook.module.scss","../node_modules/immutability-helper/index.js","../node_modules/invariant/browser.js","components/AddBook/Writing.js"],"names":["module","exports","Object","defineProperty","value","invariant","require","hasOwnProperty","prototype","splice","Array","toString","type","obj","call","slice","assign","target","source","getAllKeys","forEach","key","getOwnPropertySymbols","keys","concat","copy","object","isArray","constructor","length","Map","Set","create","getPrototypeOf","Context","this","commands","defaultCommands","update","bind","extend","isEquals","x","y","newContext","get","set","enumerable","configurable","directive","fn","$spec","_this","spec","$apply","join","nextObject","objectWasNextObject","nextValueForKey","nextObjectValue","$push","invariantPushAndUnshift","$unshift","$splice","originalObject","invariantSplice","invariantSplices","args","apply","$set","_nextObject","invariantSet","$toggle","targets","invariantSpecArray","nextObjectCopy","$unset","_spec","$add","values","invariantMapOrSet","_a","has","add","$remove","delete","$merge","specValue","original","defaultContext","command","typeOfTarget","default","condition","format","a","b","c","d","e","f","error","undefined","Error","argIndex","replace","name","framesToPop","Writing","state","book","title","chapters","url","data","categories","id","img","changeGenre","genre","loaded","deleted","event","setState","headers","getUser","token","props","match","params","fetch","adresse","method","body","JSON","stringify","then","response","ok","json","deleteBook","history","push","buffer","binary","bytes","Uint8Array","len","byteLength","i","String","fromCharCode","window","btoa","prevProps","prevState","imgStr","arrayBufferToBase64","className","classes","BackgroundForBook","writingContainer","src","empty","onClick","chagnerGenreHandler","onChange","map","cat","description","sample","year","chapter","index","to","classesRoot","typicalBtn","chaptitle","Component"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,SAAW,0BAA0B,oBAAsB,qCAAqC,eAAiB,gCAAgC,QAAU,yBAAyB,eAAiB,gCAAgC,SAAW,0BAA0B,gBAAkB,iCAAiC,iBAAmB,kCAAkC,iBAAmB,kCAAkC,UAAY,2BAA2B,MAAQ,uBAAuB,QAAU,yBAAyB,kBAAoB,qC,iCCAtjBC,OAAOC,eAAeF,EAAS,aAAc,CAAEG,OAAO,IACtD,IAAIC,EAAYC,EAAQ,KACpBC,EAAiBL,OAAOM,UAAUD,eAClCE,EAASC,MAAMF,UAAUC,OACzBE,EAAWT,OAAOM,UAAUG,SAChC,SAASC,EAAKC,GACV,OAAOF,EAASG,KAAKD,GAAKE,MAAM,GAAI,GAExC,IAAIC,EAASd,OAAOc,QAAsC,SAAUC,EAAQC,GAMxE,OALAC,EAAWD,GAAQE,SAAQ,SAAUC,GAC7Bd,EAAeO,KAAKI,EAAQG,KAC5BJ,EAAOI,GAAOH,EAAOG,OAGtBJ,GAEPE,EAAqD,oBAAjCjB,OAAOoB,sBACzB,SAAUT,GAAO,OAAOX,OAAOqB,KAAKV,GAAKW,OAAOtB,OAAOoB,sBAAsBT,KAE7E,SAAUA,GAAO,OAAOX,OAAOqB,KAAKV,IAC1C,SAASY,EAAKC,GACV,OAAOhB,MAAMiB,QAAQD,GACfV,EAAOU,EAAOE,YAAYF,EAAOG,QAASH,GACxB,QAAjBd,EAAKc,GACF,IAAII,IAAIJ,GACU,QAAjBd,EAAKc,GACF,IAAIK,IAAIL,GACPA,GAA4B,kBAAXA,EACdV,EAAOd,OAAO8B,OAAO9B,OAAO+B,eAAeP,IAAUA,GAErDA,EAEtB,IAAIQ,EAAyB,WACzB,SAASA,IACLC,KAAKC,SAAWpB,EAAO,GAAIqB,GAC3BF,KAAKG,OAASH,KAAKG,OAAOC,KAAKJ,MAE/BA,KAAKG,OAAOE,OAASL,KAAKK,OAASL,KAAKK,OAAOD,KAAKJ,MACpDA,KAAKG,OAAOG,SAAW,SAAUC,EAAGC,GAAK,OAAOD,IAAMC,GACtDR,KAAKG,OAAOM,WAAa,WAAc,OAAO,IAAIV,GAAUI,QA2DhE,OAzDApC,OAAOC,eAAe+B,EAAQ1B,UAAW,WAAY,CACjDqC,IAAK,WACD,OAAOV,KAAKG,OAAOG,UAEvBK,IAAK,SAAU1C,GACX+B,KAAKG,OAAOG,SAAWrC,GAE3B2C,YAAY,EACZC,cAAc,IAElBd,EAAQ1B,UAAUgC,OAAS,SAAUS,EAAWC,GAC5Cf,KAAKC,SAASa,GAAaC,GAE/BhB,EAAQ1B,UAAU8B,OAAS,SAAUZ,EAAQyB,GACzC,IAAIC,EAAQjB,KACRkB,EAAyB,oBAAVF,EAAwB,CAAEG,OAAQH,GAAUA,EACzDzC,MAAMiB,QAAQD,IAAWhB,MAAMiB,QAAQ0B,IACzChD,GAAWK,MAAMiB,QAAQ0B,GAAO,8LAIpChD,EAA0B,kBAATgD,GAA8B,OAATA,EAAe,+JAEtBnD,OAAOqB,KAAKY,KAAKC,UAAUmB,KAAK,OAC/D,IAAIC,EAAa9B,EA+BjB,OA9BAP,EAAWkC,GAAMjC,SAAQ,SAAUC,GAC/B,GAAId,EAAeO,KAAKsC,EAAMhB,SAAUf,GAAM,CAC1C,IAAIoC,EAAsB/B,IAAW8B,EACrCA,EAAaJ,EAAMhB,SAASf,GAAKgC,EAAKhC,GAAMmC,EAAYH,EAAM3B,GAC1D+B,GAAuBL,EAAMX,SAASe,EAAY9B,KAClD8B,EAAa9B,OAGhB,CACD,IAAIgC,EAAmC,QAAjB9C,EAAKc,GACrB0B,EAAMd,OAAOZ,EAAOmB,IAAIxB,GAAMgC,EAAKhC,IACnC+B,EAAMd,OAAOZ,EAAOL,GAAMgC,EAAKhC,IACjCsC,EAAuC,QAArB/C,EAAK4C,GACrBA,EAAWX,IAAIxB,GACfmC,EAAWnC,GACZ+B,EAAMX,SAASiB,EAAiBC,KACH,qBAApBD,GACFnD,EAAeO,KAAKY,EAAQL,MAChCmC,IAAe9B,IACf8B,EAAa/B,EAAKC,IAEG,QAArBd,EAAK4C,GACLA,EAAWV,IAAIzB,EAAKqC,GAGpBF,EAAWnC,GAAOqC,OAK3BF,GAEJtB,EAlEkB,GAoE7BjC,EAAQiC,QAAUA,EAClB,IAAIG,EAAkB,CAClBuB,MAAO,SAAUxD,EAAOoD,EAAYH,GAEhC,OADAQ,EAAwBL,EAAYH,EAAM,SACnCjD,EAAMyB,OAAS2B,EAAWhC,OAAOpB,GAASoD,GAErDM,SAAU,SAAU1D,EAAOoD,EAAYH,GAEnC,OADAQ,EAAwBL,EAAYH,EAAM,YACnCjD,EAAMyB,OAASzB,EAAMoB,OAAOgC,GAAcA,GAErDO,QAAS,SAAU3D,EAAOoD,EAAYH,EAAMW,GASxC,OA2FR,SAA0B5D,EAAOiD,GAC7BhD,EAAUK,MAAMiB,QAAQvB,GAAQ,iDAAkDA,GAClF6D,EAAgBZ,EAAKU,SArGjBG,CAAiBV,EAAYH,GAC7BjD,EAAMgB,SAAQ,SAAU+C,GACpBF,EAAgBE,GACZX,IAAeQ,GAAkBG,EAAKtC,SACtC2B,EAAa/B,EAAKuC,IAEtBvD,EAAO2D,MAAMZ,EAAYW,MAEtBX,GAEXa,KAAM,SAAUjE,EAAOkE,EAAajB,GAEhC,OAkGR,SAAsBA,GAClBhD,EAAuC,IAA7BH,OAAOqB,KAAK8B,GAAMxB,OAAc,wDApGtC0C,CAAalB,GACNjD,GAEXoE,QAAS,SAAUC,EAASjB,GACxBkB,EAAmBD,EAAS,WAC5B,IAAIE,EAAiBF,EAAQ5C,OAASJ,EAAK+B,GAAcA,EAIzD,OAHAiB,EAAQrD,SAAQ,SAAUH,GACtB0D,EAAe1D,IAAWuC,EAAWvC,MAElC0D,GAEXC,OAAQ,SAAUxE,EAAOoD,EAAYqB,EAAOb,GAUxC,OATAU,EAAmBtE,EAAO,UAC1BA,EAAMgB,SAAQ,SAAUC,GAChBnB,OAAOK,eAAeO,KAAK0C,EAAYnC,KACnCmC,IAAeQ,IACfR,EAAa/B,EAAKuC,WAEfR,EAAWnC,OAGnBmC,GAEXsB,KAAM,SAAUC,EAAQvB,EAAYqB,EAAOb,GAoBvC,OAnBAgB,EAAkBxB,EAAY,QAC9BkB,EAAmBK,EAAQ,QACF,QAArBnE,EAAK4C,GACLuB,EAAO3D,SAAQ,SAAU6D,GACrB,IAAI5D,EAAM4D,EAAG,GAAI7E,EAAQ6E,EAAG,GACxBzB,IAAeQ,GAAkBR,EAAWX,IAAIxB,KAASjB,IACzDoD,EAAa/B,EAAKuC,IAEtBR,EAAWV,IAAIzB,EAAKjB,MAIxB2E,EAAO3D,SAAQ,SAAUhB,GACjBoD,IAAeQ,GAAmBR,EAAW0B,IAAI9E,KACjDoD,EAAa/B,EAAKuC,IAEtBR,EAAW2B,IAAI/E,MAGhBoD,GAEX4B,QAAS,SAAUhF,EAAOoD,EAAYqB,EAAOb,GASzC,OARAgB,EAAkBxB,EAAY,WAC9BkB,EAAmBtE,EAAO,WAC1BA,EAAMgB,SAAQ,SAAUC,GAChBmC,IAAeQ,GAAkBR,EAAW0B,IAAI7D,KAChDmC,EAAa/B,EAAKuC,IAEtBR,EAAW6B,OAAOhE,MAEfmC,GAEX8B,OAAQ,SAAUlF,EAAOoD,EAAYqB,EAAOb,GA8ChD,IAAwB/C,EAAQsE,EApCxB,OAoCgBtE,EA7CDuC,EA8CnBnD,GAD4BkF,EA7CGnF,IA8Ca,kBAAdmF,EAAwB,2DAA8DA,GACpHlF,EAAUY,GAA4B,kBAAXA,EAAqB,6DAAgEA,GA9C5GE,EAAWf,GAAOgB,SAAQ,SAAUC,GAC5BjB,EAAMiB,KAASmC,EAAWnC,KACtBmC,IAAeQ,IACfR,EAAa/B,EAAKuC,IAEtBR,EAAWnC,GAAOjB,EAAMiB,OAGzBmC,GAEXF,OAAQ,SAAUlD,EAAOoF,GA4B7B,IAAwBtC,EA1BhB,OA2BJ7C,EAAwB,oBADJ6C,EA3BD9C,GA4BiB,8DAA+D8C,GA3BxF9C,EAAMoF,KAGjBC,EAAiB,IAAIvD,EAOzB,SAAS2B,EAAwBzD,EAAOiD,EAAMqC,GAC1CrF,EAAUK,MAAMiB,QAAQvB,GAAQ,0DAA2DsF,EAAStF,GACpGsE,EAAmBrB,EAAKqC,GAAUA,GAEtC,SAAShB,EAAmBrB,EAAMqC,GAC9BrF,EAAUK,MAAMiB,QAAQ0B,GAAO,2GAC2BqC,EAASrC,GAMvE,SAASY,EAAgB7D,GACrBC,EAAUK,MAAMiB,QAAQvB,GAAQ,2HAC2BA,GAY/D,SAAS4E,EAAkB/D,EAAQyE,GAC/B,IAAIC,EAAe/E,EAAKK,GACxBZ,EAA2B,QAAjBsF,GAA2C,QAAjBA,EAAwB,2DAA4DD,EAASC,GAlCrI1F,EAAQwC,SAAWgD,EAAenD,OAAOG,SACzCxC,EAAQuC,OAASiD,EAAejD,OAChCvC,EAAQ2F,QAAUH,EAAenD,OAEjCrC,EAAQ2F,QAAQA,QAAU5F,EAAOC,QAAUe,EAAOf,EAAQ2F,QAAS3F,I,iCCzJnED,EAAOC,QA5BS,SAAS4F,EAAWC,EAAQC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,GAOzD,IAAKP,EAAW,CACd,IAAIQ,EACJ,QAAeC,IAAXR,EACFO,EAAQ,IAAIE,MACV,qIAGG,CACL,IAAIpC,EAAO,CAAC4B,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,GACvBI,EAAW,GACfH,EAAQ,IAAIE,MACVT,EAAOW,QAAQ,OAAO,WAAa,OAAOtC,EAAKqC,UAE3CE,KAAO,sBAIf,MADAL,EAAMM,YAAc,EACdN,K,iMClCJO,E,4MACFC,MAAM,CAAEC,KAAM,CAAC,CAAEC,MAAO,GACRC,SAAU,GACVC,IAAK,CAACC,KAAM,IACZC,WAAY,KAEpBC,GAAI,GACJC,IAAK,GACLC,aAAa,EACbC,MAAO,GACPC,QAAQ,EACRC,SAAS,G,EAkCjBH,YAAc,SAACI,GACX,EAAKC,SAAS,CAACJ,MAAOG,EAAMzG,OAAOb,QAAQ,WACvC,IAAMwH,EAAU,CACZ,eAAgB,mBAChB,cAAiB,oBAAeC,cAAUC,QAEpCV,EAAM,EAAKW,MAAMC,MAAMC,OAAvBb,GACN,EAAKO,SAAS,CAACP,GAAIA,IAAK,WACxBc,MAAM,GAAD,OAAIC,IAAJ,iCAAoC,EAAKtB,MAAMO,IAAK,CACrDgB,OAAQ,QACRR,QAASA,EACTS,KAAMC,KAAKC,UAAU,CAAChB,MAAO,EAAKV,MAAMU,UACvCiB,MAAK,SAAAC,GAGP,OAFIA,EAASC,GAEND,EAASE,UACdH,MAAK,SAAAtB,c,EAwBtB0B,WAAa,SAAAxB,GACT,IAAMQ,EAAU,CACZ,eAAgB,mBAChB,cAAiB,oBAAeC,cAAUC,QAG1CI,MAAM,GAAD,OAAIC,IAAJ,iCAAoCf,GAAK,CAC1CgB,OAAQ,SACRR,QAASA,EACTS,KAAMC,KAAKC,UAAU,CAACnB,GAAIA,MACzBoB,MAAK,SAAAC,GAEP,OAAOA,KACLD,MAAK,SAAAtB,GAEN,OAAQ,EAAKa,MAAMc,QAAQC,KAAK,S,kEAtFvBC,GAIX,IAHA,IAAIC,EAAS,GACTC,EAAQ,IAAIC,WAAYH,GACxBI,EAAMF,EAAMG,WACPC,EAAI,EAAGA,EAAIF,EAAKE,IACrBL,GAAUM,OAAOC,aAAcN,EAAOI,IAE1C,OAAOG,OAAOC,KAAMT,K,0CAEV,IAAD,OAETpB,EAAU,CACZ,eAAgB,mBAChB,cAAiB,oBAAeC,cAAUC,QAGzCV,EAAMjF,KAAK4F,MAAMC,MAAMC,OAAvBb,GACLjF,KAAKwF,SAAS,CAACP,GAAIA,IAAK,WACpBc,MAAM,GAAD,OAAIC,IAAJ,sBAAyB,EAAKtB,MAAMO,IAAM,CAC3CQ,QAASA,IACfY,MAAK,SAAAC,GAAQ,OAAIA,EAASE,UAC1BH,MAAK,SAAA1B,GAAS,EAAKa,SAAS,CAAEb,SAAO,WAElC,EAAKa,SAAS,CAACH,QAAQ,e,4CA+B5BrF,KAAKwF,SAAS,CACVL,aAAcnF,KAAK0E,MAAMS,gB,yCAIdoC,EAAUC,GACtBA,EAAU7C,KAAK,GAAGS,OAASpF,KAAK0E,MAAMU,OAA8B,KAArBpF,KAAK0E,MAAMU,OACzDpF,KAAKwF,SAAS,CAACb,KAAMxE,IAAOH,KAAK0E,MAAMC,KAAZ,eAEtB,EAAK,CACNS,MAAO,CAAClD,KAAMlC,KAAK0E,MAAMU,c,+BAyB5B,IAAD,OAEAqC,EAAU,GAGd,OAFsCA,OAAZtD,GAA1BnE,KAAK0E,MAAMC,KAAK,GAAGG,IAA4B9E,KAAK0H,oBAAoB1H,KAAK0E,MAAMC,KAAK,GAAGG,IAAIC,MAAiB,GAG5G,yBAAK4C,UAAWC,IAAQC,mBACpB,4BAAK7H,KAAK0E,MAAMC,KAAK,GAAGC,YACIT,GAA1BnE,KAAK0E,MAAMC,KAAK,GAAGG,IACrB,yBAAK6C,UAAWC,IAAQE,kBAAkB,yBAAKC,IAjH5C,0BAiH8DN,KAC/D,yBAAKE,UAAWC,IAAQE,kBAAkB,yBAAKC,IAAKC,OAEtD,yBAAKL,UAAWC,IAAQE,kBAAkB,2BAAI9H,KAAK0E,MAAMC,KAAK,GAAGS,OAAjE,IAA4E,4BAAQ6C,QAASjI,KAAKkI,oBAAoB9H,KAAKJ,OAA/C,UAA5E,IAAoJA,KAAK0E,MAAMS,YAAc,6BAAK,4BAAQlH,MAAO+B,KAAK0E,MAAMU,MAAO+C,SAAU,SAAC5C,GAAD,OAAW,EAAKJ,YAAYI,KACrP,4BAAQtH,MAAM,KACd,4BAAQA,MAAM,iBAAd,iBACA,4BAAQA,MAAM,oCAAd,oCACA,4BAAQA,MAAM,iCAAd,iCACA,4BAAQA,MAAM,gCAAd,gCACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,mCAAd,kCACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,oBAAd,oBACA,4BAAQA,MAAM,oCAAd,qCAbyK,KAcxJ,KAdrB,KAeA,yBAAK0J,UAAWC,IAAQE,kBAAoB9H,KAAK0E,MAAMC,KAAK,GAAGK,WAAWoD,KAAI,SAAAC,GAAG,OAAI,yCACrF,yBAAKV,UAAWC,IAAQE,kBAAmB9H,KAAK0E,MAAMC,KAAK,GAAG2D,aAC9D,yBAAKX,UAAWC,IAAQE,kBAAmB9H,KAAK0E,MAAMC,KAAK,GAAG4D,QAC9D,yBAAKZ,UAAWC,IAAQE,kBAAmB9H,KAAK0E,MAAMC,KAAK,GAAG6D,MAC9D,6BAAK,8CACCxI,KAAK0E,MAAMC,KAAK,GAAGE,SAASuD,KAAI,SAACK,EAASC,GAAV,OAC9B,kBAAC,IAAD,CAAMxJ,IAAKwJ,EAAOC,GAAE,mBAAc,EAAKjE,MAAMO,GAAzB,qBAAwCyD,IAAS,4BAAQf,UAAWiB,IAAYC,YAAaJ,EAAQK,eAIzH9I,KAAK0E,MAAMC,KAAK,GAAGE,SAASnF,OAAS,EAAK,kBAAC,IAAD,CAAMiJ,GAAE,mBAAc3I,KAAK0E,MAAMO,GAAzB,qBAAwCjF,KAAK0E,MAAMC,KAAK,GAAGE,SAASnF,SAAU,uDAC9H,kBAAC,IAAD,CAAMiJ,GAAE,mBAAc3I,KAAK0E,MAAMO,GAAzB,gBAA2C,wDAG7D,4BAAQgD,QAAS,kBAAI,EAAKxB,WAAW,EAAK/B,MAAMO,MAAhD,4B,GAhJM8D,aAqJPtE","file":"static/js/6.34e1b0ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Category\":\"addBook_Category__dlvdX\",\"categoriesContainer\":\"addBook_categoriesContainer__2Gkjs\",\"frameContainer\":\"addBook_frameContainer__oVIwQ\",\"fileAdd\":\"addBook_fileAdd__a2Xcg\",\"inptsContainer\":\"addBook_inptsContainer__2wgYG\",\"fileSbmt\":\"addBook_fileSbmt__1c8NE\",\"buttonContainer\":\"addBook_buttonContainer__2ol1t\",\"writingContainer\":\"addBook_writingContainer__2eQ8r\",\"newChapContainer\":\"addBook_newChapContainer__2ShKR\",\"delAkapit\":\"addBook_delAkapit__2jk60\",\"oneUp\":\"addBook_oneUp__xAl5_\",\"oneDown\":\"addBook_oneDown__M38nc\",\"BackgroundForBook\":\"addBook_BackgroundForBook__13gGK\"};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar invariant = require(\"invariant\");\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar splice = Array.prototype.splice;\nvar toString = Object.prototype.toString;\nfunction type(obj) {\n    return toString.call(obj).slice(8, -1);\n}\nvar assign = Object.assign || /* istanbul ignore next */ (function (target, source) {\n    getAllKeys(source).forEach(function (key) {\n        if (hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n        }\n    });\n    return target;\n});\nvar getAllKeys = typeof Object.getOwnPropertySymbols === 'function'\n    ? function (obj) { return Object.keys(obj).concat(Object.getOwnPropertySymbols(obj)); }\n    /* istanbul ignore next */\n    : function (obj) { return Object.keys(obj); };\nfunction copy(object) {\n    return Array.isArray(object)\n        ? assign(object.constructor(object.length), object)\n        : (type(object) === 'Map')\n            ? new Map(object)\n            : (type(object) === 'Set')\n                ? new Set(object)\n                : (object && typeof object === 'object')\n                    ? assign(Object.create(Object.getPrototypeOf(object)), object)\n                    /* istanbul ignore next */\n                    : object;\n}\nvar Context = /** @class */ (function () {\n    function Context() {\n        this.commands = assign({}, defaultCommands);\n        this.update = this.update.bind(this);\n        // Deprecated: update.extend, update.isEquals and update.newContext\n        this.update.extend = this.extend = this.extend.bind(this);\n        this.update.isEquals = function (x, y) { return x === y; };\n        this.update.newContext = function () { return new Context().update; };\n    }\n    Object.defineProperty(Context.prototype, \"isEquals\", {\n        get: function () {\n            return this.update.isEquals;\n        },\n        set: function (value) {\n            this.update.isEquals = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Context.prototype.extend = function (directive, fn) {\n        this.commands[directive] = fn;\n    };\n    Context.prototype.update = function (object, $spec) {\n        var _this = this;\n        var spec = (typeof $spec === 'function') ? { $apply: $spec } : $spec;\n        if (!(Array.isArray(object) && Array.isArray(spec))) {\n            invariant(!Array.isArray(spec), 'update(): You provided an invalid spec to update(). The spec may ' +\n                'not contain an array except as the value of $set, $push, $unshift, ' +\n                '$splice or any custom command allowing an array value.');\n        }\n        invariant(typeof spec === 'object' && spec !== null, 'update(): You provided an invalid spec to update(). The spec and ' +\n            'every included key path must be plain objects containing one of the ' +\n            'following commands: %s.', Object.keys(this.commands).join(', '));\n        var nextObject = object;\n        getAllKeys(spec).forEach(function (key) {\n            if (hasOwnProperty.call(_this.commands, key)) {\n                var objectWasNextObject = object === nextObject;\n                nextObject = _this.commands[key](spec[key], nextObject, spec, object);\n                if (objectWasNextObject && _this.isEquals(nextObject, object)) {\n                    nextObject = object;\n                }\n            }\n            else {\n                var nextValueForKey = type(object) === 'Map'\n                    ? _this.update(object.get(key), spec[key])\n                    : _this.update(object[key], spec[key]);\n                var nextObjectValue = type(nextObject) === 'Map'\n                    ? nextObject.get(key)\n                    : nextObject[key];\n                if (!_this.isEquals(nextValueForKey, nextObjectValue)\n                    || typeof nextValueForKey === 'undefined'\n                        && !hasOwnProperty.call(object, key)) {\n                    if (nextObject === object) {\n                        nextObject = copy(object);\n                    }\n                    if (type(nextObject) === 'Map') {\n                        nextObject.set(key, nextValueForKey);\n                    }\n                    else {\n                        nextObject[key] = nextValueForKey;\n                    }\n                }\n            }\n        });\n        return nextObject;\n    };\n    return Context;\n}());\nexports.Context = Context;\nvar defaultCommands = {\n    $push: function (value, nextObject, spec) {\n        invariantPushAndUnshift(nextObject, spec, '$push');\n        return value.length ? nextObject.concat(value) : nextObject;\n    },\n    $unshift: function (value, nextObject, spec) {\n        invariantPushAndUnshift(nextObject, spec, '$unshift');\n        return value.length ? value.concat(nextObject) : nextObject;\n    },\n    $splice: function (value, nextObject, spec, originalObject) {\n        invariantSplices(nextObject, spec);\n        value.forEach(function (args) {\n            invariantSplice(args);\n            if (nextObject === originalObject && args.length) {\n                nextObject = copy(originalObject);\n            }\n            splice.apply(nextObject, args);\n        });\n        return nextObject;\n    },\n    $set: function (value, _nextObject, spec) {\n        invariantSet(spec);\n        return value;\n    },\n    $toggle: function (targets, nextObject) {\n        invariantSpecArray(targets, '$toggle');\n        var nextObjectCopy = targets.length ? copy(nextObject) : nextObject;\n        targets.forEach(function (target) {\n            nextObjectCopy[target] = !nextObject[target];\n        });\n        return nextObjectCopy;\n    },\n    $unset: function (value, nextObject, _spec, originalObject) {\n        invariantSpecArray(value, '$unset');\n        value.forEach(function (key) {\n            if (Object.hasOwnProperty.call(nextObject, key)) {\n                if (nextObject === originalObject) {\n                    nextObject = copy(originalObject);\n                }\n                delete nextObject[key];\n            }\n        });\n        return nextObject;\n    },\n    $add: function (values, nextObject, _spec, originalObject) {\n        invariantMapOrSet(nextObject, '$add');\n        invariantSpecArray(values, '$add');\n        if (type(nextObject) === 'Map') {\n            values.forEach(function (_a) {\n                var key = _a[0], value = _a[1];\n                if (nextObject === originalObject && nextObject.get(key) !== value) {\n                    nextObject = copy(originalObject);\n                }\n                nextObject.set(key, value);\n            });\n        }\n        else {\n            values.forEach(function (value) {\n                if (nextObject === originalObject && !nextObject.has(value)) {\n                    nextObject = copy(originalObject);\n                }\n                nextObject.add(value);\n            });\n        }\n        return nextObject;\n    },\n    $remove: function (value, nextObject, _spec, originalObject) {\n        invariantMapOrSet(nextObject, '$remove');\n        invariantSpecArray(value, '$remove');\n        value.forEach(function (key) {\n            if (nextObject === originalObject && nextObject.has(key)) {\n                nextObject = copy(originalObject);\n            }\n            nextObject.delete(key);\n        });\n        return nextObject;\n    },\n    $merge: function (value, nextObject, _spec, originalObject) {\n        invariantMerge(nextObject, value);\n        getAllKeys(value).forEach(function (key) {\n            if (value[key] !== nextObject[key]) {\n                if (nextObject === originalObject) {\n                    nextObject = copy(originalObject);\n                }\n                nextObject[key] = value[key];\n            }\n        });\n        return nextObject;\n    },\n    $apply: function (value, original) {\n        invariantApply(value);\n        return value(original);\n    },\n};\nvar defaultContext = new Context();\nexports.isEquals = defaultContext.update.isEquals;\nexports.extend = defaultContext.extend;\nexports.default = defaultContext.update;\n// @ts-ignore\nexports.default.default = module.exports = assign(exports.default, exports);\n// invariants\nfunction invariantPushAndUnshift(value, spec, command) {\n    invariant(Array.isArray(value), 'update(): expected target of %s to be an array; got %s.', command, value);\n    invariantSpecArray(spec[command], command);\n}\nfunction invariantSpecArray(spec, command) {\n    invariant(Array.isArray(spec), 'update(): expected spec of %s to be an array; got %s. ' +\n        'Did you forget to wrap your parameter in an array?', command, spec);\n}\nfunction invariantSplices(value, spec) {\n    invariant(Array.isArray(value), 'Expected $splice target to be an array; got %s', value);\n    invariantSplice(spec.$splice);\n}\nfunction invariantSplice(value) {\n    invariant(Array.isArray(value), 'update(): expected spec of $splice to be an array of arrays; got %s. ' +\n        'Did you forget to wrap your parameters in an array?', value);\n}\nfunction invariantApply(fn) {\n    invariant(typeof fn === 'function', 'update(): expected spec of $apply to be a function; got %s.', fn);\n}\nfunction invariantSet(spec) {\n    invariant(Object.keys(spec).length === 1, 'Cannot have more than one key in an object with $set');\n}\nfunction invariantMerge(target, specValue) {\n    invariant(specValue && typeof specValue === 'object', 'update(): $merge expects a spec of type \\'object\\'; got %s', specValue);\n    invariant(target && typeof target === 'object', 'update(): $merge expects a target of type \\'object\\'; got %s', target);\n}\nfunction invariantMapOrSet(target, command) {\n    var typeOfTarget = type(target);\n    invariant(typeOfTarget === 'Map' || typeOfTarget === 'Set', 'update(): %s expects a target of type Set or Map; got %s', command, typeOfTarget);\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","import React,{Component} from 'react'\nimport {adresse} from '../../config'\nimport {getUser} from '../../services/auth'\nimport classesRoot from '../../styles/index.module.scss'\nimport classes from '../../styles/addBook.module.scss'\nimport { Link, Redirect } from 'react-router-dom';\nimport empty from '../../assets/images/empty.png'\nimport update from 'immutability-helper'\n\nconst base64Flag = 'data:image/jpeg;base64,';\nclass Writing extends Component {\n    state={ book: [{ title: '',\n                    chapters: [],\n                    url: {data: []},\n                    categories: []\n                }],\n            id: '',\n            img: '',\n            changeGenre: false,\n            genre: '',\n            loaded: false,\n            deleted: false\n          }\n          \n    arrayBufferToBase64( buffer ) {\n              var binary = '';\n              var bytes = new Uint8Array( buffer );\n              var len = bytes.byteLength;\n              for (var i = 0; i < len; i++) {\n                  binary += String.fromCharCode( bytes[ i ] );\n              }\n              return window.btoa( binary );\n    }\n    componentDidMount(){\n       \n        const headers = { \n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + `${getUser().token}`\n        }\n\n        let {id} = this.props.match.params\n        this.setState({id: id}, ()=>{\n            fetch(`${adresse}books/mine/${this.state.id}`, {\n                headers: headers})\n         .then(response => response.json())\n         .then(book => {this.setState({ book}, ()=>\n         {\n             this.setState({loaded: true })\n         })\n            \n        }\n        )\n    })\n    }\n\n    changeGenre = (event) => {\n        this.setState({genre: event.target.value}, ()=>{\n            const headers = {    \n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + `${getUser().token}`\n                 }\n                 let {id} = this.props.match.params\n                this.setState({id: id}, ()=>{\n                fetch(`${adresse}books/mine/patchGenre/${this.state.id}`,{\n                    method: \"PATCH\",\n                    headers: headers,\n                    body: JSON.stringify({genre: this.state.genre})\n                  }).then(response=> {\n                   if(!response.ok){\n                   }\n                   return response.json()\n                  }).then(data => {\n                  })\n                })\n\n        })\n    }\n    chagnerGenreHandler(){\n        this.setState({\n            changeGenre: !this.state.changeGenre\n        })\n    }\n\n    componentDidUpdate(prevProps,prevState){\n        if(prevState.book[0].genre != this.state.genre && this.state.genre !== ''){\n            this.setState({book: update(this.state.book, \n                {\n                [0] : {\n                genre: {$set: this.state.genre}\n                }\n            })\n          })\n        }\n\n    }\n    deleteBook = id =>{\n        const headers = {    \n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + `${getUser().token}`\n             }\n             \n            fetch(`${adresse}books/mine/deleteBook/${id}`,{\n                method: \"DELETE\",\n                headers: headers,\n                body: JSON.stringify({id: id})\n              }).then(response=> {\n             \n               return response\n              }).then(data => {\n           \n                return  this.props.history.push('/')\n              })\n        }\n    render(){\n\n        let imgStr =  ''\n        this.state.book[0].url != undefined ? imgStr = this.arrayBufferToBase64(this.state.book[0].url.data) : imgStr = ''\n        \n        return (\n            <div className={classes.BackgroundForBook}>\n                <h2>{this.state.book[0].title}</h2>\n                { this.state.book[0].url != undefined ?\n                <div className={classes.writingContainer}><img src={base64Flag + imgStr} /></div>\n                : <div className={classes.writingContainer}><img src={empty}/></div>\n                }\n                <div className={classes.writingContainer}><p>{this.state.book[0].genre}</p> <button onClick={this.chagnerGenreHandler.bind(this)}>Edytuj</button> { this.state.changeGenre ? <div><select value={this.state.genre} onChange={(event) => this.changeGenre(event)}>\n                    <option value=\"\"></option>\n                    <option value=\"kryminał\">Kryminał</option>\n                    <option value=\"powieść psychologiczna\">Powieść psychologiczna</option>\n                    <option value=\"powieść romantyczna\">Powieść romantyczna</option>\n                    <option value=\"powieść obyczajowa\">Powieść obyczajowa</option>\n                    <option value=\"eseje\">Eseje</option>\n                    <option value=\"thriller\">Thriller</option>\n                    <option value=\"powieść humorystyczna\">Powieść humorystycza</option>\n                    <option value=\"horror\">Horror</option>\n                    <option value=\"si-fi\">Si-Fi</option>\n                    <option value=\"fantastyka\">Fantastyka</option>\n                    <option value=\"literatura faktu\">Literatura faktu</option>\n                    <option value=\"dla dzieci i młodzieży\">Dla dzieci i młodzieży</option>\n                  </select> </div> : null } </div>\n                <div className={classes.writingContainer}>{ this.state.book[0].categories.map(cat=> (<span>cat</span>) )}</div>\n                <div className={classes.writingContainer}>{this.state.book[0].description}</div>\n                <div className={classes.writingContainer}>{this.state.book[0].sample}</div>\n                <div className={classes.writingContainer}>{this.state.book[0].year}</div>\n                <div><h3>Rozdziały</h3>\n                    { this.state.book[0].chapters.map((chapter, index) => (\n                        <Link key={index} to={`/myBooks/${this.state.id}/chapters/${index}`}><button className={classesRoot.typicalBtn}>{chapter.chaptitle}</button></Link>\n                    ))\n                    }\n                    {\n                        this.state.book[0].chapters.length > 0 ? (<Link to={`/myBooks/${this.state.id}/chapters/${this.state.book[0].chapters.length}`}><button>Nowy rozdział</button></Link>)\n                        : <Link to={`/myBooks/${this.state.id}/chapters/0`} ><button>Zacznij pisać</button></Link>\n                    }\n                </div>\n                <button onClick={()=>this.deleteBook(this.state.id)}>Usuwam ten bullshit</button>\n            </div>\n        )\n    }\n}\nexport default Writing"],"sourceRoot":""}