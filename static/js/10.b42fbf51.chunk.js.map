{"version":3,"sources":["styles/addBook.module.scss","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/AddPoem/AddPoem.js"],"names":["module","exports","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","AddPoem","state","title","author","year","categories","description","redirect","id","poem","akapits","lines","addPoem","event","url","adresse","headers","Authorization","getUser","token","preventDefault","fetch","method","body","JSON","stringify","then","response","ok","console","log","json","data","setState","addCat","array","target","value","ar","Set","cat","this","splice","to","onSubmit","name","type","onChange","multiple","className","classes","categoriesContainer","map","category","index","Category","key","onClick","deleteCategory","Component"],"mappings":"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","file":"static/js/10.b42fbf51.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Category\":\"addBook_Category__dlvdX\",\"categoriesContainer\":\"addBook_categoriesContainer__2Gkjs\",\"frameContainer\":\"addBook_frameContainer__oVIwQ\",\"fileAdd\":\"addBook_fileAdd__a2Xcg\",\"inptsContainer\":\"addBook_inptsContainer__2wgYG\",\"fileSbmt\":\"addBook_fileSbmt__1c8NE\",\"buttonContainer\":\"addBook_buttonContainer__2ol1t\",\"writingContainer\":\"addBook_writingContainer__2eQ8r\",\"newChapContainer\":\"addBook_newChapContainer__2ShKR\",\"delAkapit\":\"addBook_delAkapit__2jk60\",\"oneUp\":\"addBook_oneUp__xAl5_\",\"oneDown\":\"addBook_oneDown__M38nc\",\"BackgroundForBook\":\"addBook_BackgroundForBook__13gGK\"};","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { Component } from \"react\";\nimport { adresse } from \"../../config\";\nimport classes from \"../../styles/addBook.module.scss\";\nimport { getUser } from \"../../services/auth\";\nimport { Redirect } from \"react-router-dom\";\n\nclass AddPoem extends Component {\n  state = {\n    title: \"\",\n    author: \"\",\n    year: \"\",\n    categories: [],\n    description: \"\",\n    redirect: false,\n    id: \"\",\n    poem: { akapits: [{ lines: [] }] },\n  };\n\n  addPoem = (event) => {\n    const url = `${adresse}/poems/add`;\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + getUser().token,\n    };\n    event.preventDefault();\n    fetch(url, {\n      method: \"POST\",\n      headers: headers,\n      body: JSON.stringify(this.state),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          console.log(\"fock\");\n          event.preventDefault();\n        }\n        return response.json();\n      })\n      .then((data) => {\n        this.setState({ redirect: true, id: data.id });\n      });\n  };\n  addCat = (event) => {\n    let array = [...this.state.categories];\n    array = [...array, event.target.value];\n    const ar = [...new Set(array)];\n    this.setState({ categories: ar });\n  };\n  deleteCategory(id) {\n    let cat = this.state.categories;\n    cat.splice(id, 1);\n    this.setState({ categories: cat });\n  }\n\n  render() {\n    console.log(this.state);\n    if (this.state.redirect === true) {\n      return <Redirect to={`/addBody/${this.state.id}`} />;\n    }\n    return (\n      <div>\n        <h1>Dodaj wiersz</h1>\n        <form method=\"post\" onSubmit={this.addPoem}>\n          <label>\n            <span>Tytuł</span>\n            <input\n              name=\"title\"\n              type=\"text\"\n              onChange={(event) => this.setState({ title: event.target.value })}\n              value={this.state.title}\n            />\n          </label>\n\n          <label>\n            <span>Autor</span>\n            <input\n              name=\"author\"\n              type=\"text\"\n              onChange={(event) =>\n                this.setState({ author: event.target.value })\n              }\n              value={this.state.author}\n            />\n          </label>\n          <label>\n            <span>Rok powstania</span>\n            <input\n              name=\"year\"\n              type=\"text\"\n              onChange={(event) => this.setState({ year: event.target.value })}\n              value={this.state.year}\n            />\n          </label>\n          <label>\n            <span>Opis wiersza (okoliczności powstania, ciekawostki)</span>\n            <textarea\n              name=\"description\"\n              onChange={(event) =>\n                this.setState({ description: event.target.value })\n              }\n              value={this.state.description}\n            />\n          </label>\n          <label>\n            <span>Kategoria</span>\n            <select\n              multiple={true}\n              value={this.state.categories}\n              onChange={this.addCat}\n            >\n              <option value=\"miłość\">miłość</option>\n              <option value=\"nienawiść\">nienawiść</option>\n              <option value=\"smutek\">smutek</option>\n              <option value=\"złość\">złość</option>\n              <option value=\"radość\">radość</option>\n              <option value=\"romantyk\">romantyk</option>\n              <option value=\"klasycznie\">klasycznie</option>\n              <option value=\"prawda\">prawda</option>\n              <option value=\"Bóg\">Bóg</option>\n              <option value=\"relacje\">relacje</option>\n              <option value=\"ambiwalencja\">ambiwalencja</option>\n              <option value=\"dziwny\">dziwny</option>\n              <option value=\"abstrakcja\">abstrakcja</option>\n              <option value=\"gorycz\">gorycz</option>\n              <option value=\"pochwała życia\">pochwała życia</option>\n            </select>\n          </label>\n          <div className={classes.categoriesContainer}>\n            {this.state.categories.map((category, index) => (\n              <span className={classes.Category} key={index}>\n                #{category}{\" \"}\n                <strong onClick={() => this.deleteCategory(index)}>× </strong>{\" \"}\n              </span>\n            ))}\n          </div>\n          <input type=\"submit\" value=\"Opublikuj\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddPoem;\n"],"sourceRoot":""}