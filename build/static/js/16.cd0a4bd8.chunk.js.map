{"version":3,"sources":["styles/login.module.scss","components/Login/Login.js"],"names":["module","exports","Login","state","email","password","info","logged","handleUpdate","event","setState","target","name","value","handleSubmit","preventDefault","requestOptions","method","headers","body","JSON","stringify","fetch","adresse","then","response","ok","json","user","token","window","localStorage","setItem","setUser","this","props","history","push","className","classes","Container","pageTitle","style","height","width","onSubmit","bind","emailInp","emailField","type","onChange","submitContainer","marginLogin","signUpButton","to","React","Component"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,gBAAkB,+BAA+B,aAAe,4BAA4B,UAAY,yBAAyB,kBAAoB,iCAAiC,SAAW,wBAAwB,WAAa,0BAA0B,YAAc,6B,6ICM1RC,E,4MACJC,MAAQ,CACNC,MAAO,GACPC,SAAU,GACVC,KAAM,GACNC,QAAQ,G,EAGVC,aAAe,SAAAC,GACb,EAAKC,SAAL,eACGD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,S,EAGtCC,aAAe,SAAAL,GAEb,GADAA,EAAMM,iBACmB,KAArB,EAAKZ,MAAMC,OAAwC,KAAxB,EAAKD,MAAME,SAAiB,CACzD,IAAMW,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAACjB,MAAO,EAAKD,MAAMC,MAAOC,SAAU,EAAKF,MAAME,YAKxEiB,MAAM,GAAD,OAAIC,IAAJ,eAA0BP,GAC1BQ,MAAK,SAAAC,GAIF,OAHIA,EAASC,IACT,EAAKhB,SAAS,CAACJ,KAAM,8BAElBmB,EAASE,UAEnBH,MAAK,SAAAI,GAOF,OALIA,EAAKC,SAXD,SAAAD,GAChBE,OAAOC,aAAaC,QAAQ,OAAQZ,KAAKC,UAAUO,IAYvCK,CAAQL,GACR,EAAKlB,SAAS,CAACH,QAAQ,KAEpBqB,O,mEAKVM,KAAK/B,MAAMI,QACZ2B,KAAKC,MAAMC,QAAQC,KAAK,gB,+BAMxB,OACE,oCACE,yBAAKC,UAAWC,IAAQC,WAExB,wBAAIF,UAAWC,IAAQE,WAAvB,YACA,wBAAIC,MAAO,CAACC,OAAQ,OAAQC,MAAO,SAAUV,KAAK/B,MAAMG,MACxD,0BACEW,OAAO,OACP4B,SACEX,KAAKpB,aAAagC,KAAKZ,OAGzB,+BACE,0BAAMI,UAAWC,IAAQQ,UAAzB,SACA,2BAAOT,UAAWC,IAAQS,WAAYC,KAAK,QAAQrC,KAAK,QAAQsC,SAAUhB,KAAK1B,aAAcK,MAAOqB,KAAK/B,MAAMC,SAEjH,+BACE,0BAAMkC,UAAWC,IAAQQ,UAAzB,cACA,2BACET,UAAWC,IAAQS,WACnBC,KAAK,WACLrC,KAAK,WACLsC,SAAUhB,KAAK1B,aACfK,MAAOqB,KAAK/B,MAAME,YAGtB,yBAAKiC,UAAS,UAAKC,IAAQY,gBAAb,YAAgCZ,IAAQa,cACtD,2BAAOd,UAAWC,IAAQS,WAAYC,KAAK,SAASpC,MAAM,cAG1D,yBAAKyB,UAAWC,IAAQY,iBACxB,4BAAQb,UAAS,UAAKC,IAAQc,eAAgB,kBAAC,IAAD,CAAMC,GAAG,WAAT,qBAE9C,yBAAKhB,UAAWC,IAAQY,iBACxB,kBAAC,IAAD,CAAMG,GAAG,kBAAT,4C,GApFMC,IAAMC,WA4FPtD","file":"static/js/16.cd0a4bd8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitContainer\":\"login_submitContainer__2DVxR\",\"signUpButton\":\"login_signUpButton__8sgdX\",\"pageTitle\":\"login_pageTitle__1NHe2\",\"pageTitleHomePage\":\"login_pageTitleHomePage__37je0\",\"emailInp\":\"login_emailInp__2JpwB\",\"emailField\":\"login_emailField__1AQWh\",\"marginLogin\":\"login_marginLogin__pEOjC\"};","import classes from '../../styles/login.module.scss'\nimport React,{useState} from \"react\"\nimport { isLoggedIn, getUser, login } from \"../../services/auth\"\nimport { adresse } from '../../config';\nimport {Link, Redirect} from 'react-router-dom'\n\n\nclass Login extends React.Component {\n  state = {\n    email: '',\n    password: '',\n    info: '',\n    logged: false\n\n  }\n  handleUpdate = event => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    })\n  }\n  handleSubmit = event => {\n    event.preventDefault()\n    if (this.state.email !== '' && this.state.password !== '') {\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({email: this.state.email, password: this.state.password })\n    };\n\n    const setUser = user =>\n    window.localStorage.setItem(\"user\", JSON.stringify(user))\n    fetch(`${adresse}users/login`, requestOptions)\n        .then(response =>{\n            if(!response.ok){\n                this.setState({info: 'Błąd logowania!'})\n            }\n            return response.json()\n        })\n        .then(user => {\n            // login successful if there's a jwt token in the response\n            if (user.token) {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                setUser(user)\n                this.setState({logged: true})\n            }\n            return user;\n      })\n    }\n  }\n    componentDidUpdate(){\n      if(this.state.logged){\n        this.props.history.push('/myProfile')\n      }\n    }\n      render() {\n    \n       \n        return (\n          <>\n            <div className={classes.Container}>\n    \n            <h2 className={classes.pageTitle}>Zaloguj:</h2> \n            <h3 style={{height: '40px', width: '100%'}}>{this.state.info}</h3>\n            <form\n              method=\"post\"\n              onSubmit={\n                this.handleSubmit.bind(this)\n              }\n              >\n              <label>\n                <span className={classes.emailInp}>Email</span>\n                <input className={classes.emailField} type=\"email\" name=\"email\" onChange={this.handleUpdate} value={this.state.email}/>\n              </label>\n              <label>\n                <span className={classes.emailInp}>Hasło</span>\n                <input\n                  className={classes.emailField}\n                  type=\"password\"\n                  name=\"password\"\n                  onChange={this.handleUpdate}\n                  value={this.state.password}\n                  />\n              </label>\n              <div className={`${classes.submitContainer} ${classes.marginLogin}`}>\n              <input className={classes.emailField} type=\"submit\" value=\"Zaloguj\" />\n              </div>\n            </form>\n              <div className={classes.submitContainer}>\n              <button className={`${classes.signUpButton}`}><Link to=\"/signUp\">Utwórz konto</Link></button>\n              </div>\n              <div className={classes.submitContainer}>\n              <Link to=\"/resetPassword\">Zapomniałeś hasła?</Link>\n              </div>        \n              \n            </div>\n          </>\n        )\n      }\n    }\n    export default Login"],"sourceRoot":""}